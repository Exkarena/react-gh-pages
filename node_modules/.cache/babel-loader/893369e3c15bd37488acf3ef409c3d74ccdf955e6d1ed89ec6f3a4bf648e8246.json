{"ast":null,"code":"var _jsxFileName = \"C:\\\\mine\\\\\\u0432\\u0443\\u0437\\\\\\u0432\\u0435\\u0431\\\\react-app\\\\src\\\\components\\\\Header\\\\Timer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // We need ref in this, because we are dealing\n  // with JS setInterval to keep track of it and\n  // stop it when needed\n  const Ref = useRef(null);\n\n  // The state for our timer\n  const [timer, setTimer] = useState('00:00:00:00');\n  const getTimeRemaining = e => {\n    const total = Date.parse(e) - Date.parse(new Date());\n    const seconds = Math.floor(total / 1000 % 60);\n    const minutes = Math.floor(total / 1000 / 60 % 60);\n    const hours = Math.floor(total / 1000 / 60 / 60 % 24);\n    const days = Math.floor(total / 1000 / 60 / 60 / 24);\n    return {\n      total,\n      days,\n      hours,\n      minutes,\n      seconds\n    };\n  };\n  const startTimer = e => {\n    let {\n      total,\n      days,\n      hours,\n      minutes,\n      seconds\n    } = getTimeRemaining(e);\n    if (total >= 0) {\n      // update the timer\n      // check if less than 10 then we need to\n      // add '0' at the beginning of the variable\n      setTimer((days > 9 ? days : '0' + days) + 'd' + ':' + (hours > 9 ? hours : '0' + hours) + 'h' + ':' + (minutes > 9 ? minutes : '0' + minutes) + 'm' + ':' + (seconds > 9 ? seconds : '0' + seconds) + 's');\n    }\n  };\n  const clearTimer = e => {\n    // If you adjust it you should also need to\n    // adjust the Endtime formula we are about\n    // to code next\t\n    setTimer('00:00:00:00');\n\n    // If you try to remove this line the\n    // updating of timer Variable will be\n    // after 1000ms or 1sec\n    if (Ref.current) clearInterval(Ref.current);\n    const id = setInterval(() => {\n      startTimer(e);\n    }, 1000);\n    Ref.current = id;\n  };\n  const getDeadTime = () => {\n    let deadline = new Date();\n\n    // This is where you need to adjust if\n    // you entend to add more time\n    deadline.setSeconds(deadline.getSeconds() + 1500300);\n    return deadline;\n  };\n\n  // We can use useEffect so that when the component\n  // mount the timer will start as soon as possible\n\n  // We put empty array to act as componentDid\n  // mount only\n  useEffect(() => {\n    clearTimer(getDeadTime());\n  }, []);\n\n  // Another way to call the clearTimer() to start\n  // the countdown is via action event from the\n  // button first we create function to be called\n  // by the button\n  const onClickReset = () => {\n    clearTimer(getDeadTime());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App timer__items\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App timer__item\",\n      children: timer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 3\n  }, this);\n};\n_s(App, \"njXmd/lJMOhUobCix5S4ErvG5mo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","Ref","timer","setTimer","getTimeRemaining","e","total","Date","parse","seconds","Math","floor","minutes","hours","days","startTimer","clearTimer","current","clearInterval","id","setInterval","getDeadTime","deadline","setSeconds","getSeconds","onClickReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/mine/вуз/веб/react-app/src/components/Header/Timer.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport './Header.css';\r\n\r\n\r\nconst App = () => {\r\n\r\n\t// We need ref in this, because we are dealing\r\n\t// with JS setInterval to keep track of it and\r\n\t// stop it when needed\r\n\tconst Ref = useRef(null);\r\n\r\n\t// The state for our timer\r\n\tconst [timer, setTimer] = useState('00:00:00:00');\r\n\r\n\r\n\tconst getTimeRemaining = (e) => {\r\n\t\tconst total = Date.parse(e) - Date.parse(new Date());\r\n\t\tconst seconds = Math.floor((total / 1000) % 60);\r\n\t\tconst minutes = Math.floor((total / 1000 / 60) % 60);\r\n\t\tconst hours = Math.floor((total / 1000 / 60 / 60) % 24);\r\n        const days = Math.floor((total / 1000/ 60 / 60) / 24 );\r\n\t\treturn {\r\n\t\t\ttotal, days, hours, minutes, seconds\r\n\t\t};\r\n\t}\r\n\r\n\r\n\tconst startTimer = (e) => {\r\n\t\tlet { total, days, hours, minutes, seconds }\r\n\t\t\t\t\t= getTimeRemaining(e);\r\n\t\tif (total >= 0) {\r\n\r\n\t\t\t// update the timer\r\n\t\t\t// check if less than 10 then we need to\r\n\t\t\t// add '0' at the beginning of the variable\r\n\t\t\tsetTimer(\r\n                (days > 9 ? days : '0' + days) +'d' + ':' +\r\n\t\t\t\t(hours > 9 ? hours : '0' + hours) +'h' + ':' +\r\n\t\t\t\t(minutes > 9 ? minutes : '0' + minutes) +'m' + ':'\r\n\t\t\t\t+ (seconds > 9 ? seconds : '0' + seconds) + 's'\r\n\t\t\t)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tconst clearTimer = (e) => {\r\n\r\n\t\t// If you adjust it you should also need to\r\n\t\t// adjust the Endtime formula we are about\r\n\t\t// to code next\t\r\n\t\tsetTimer('00:00:00:00');\r\n\r\n\t\t// If you try to remove this line the\r\n\t\t// updating of timer Variable will be\r\n\t\t// after 1000ms or 1sec\r\n\t\tif (Ref.current) clearInterval(Ref.current);\r\n\t\tconst id = setInterval(() => {\r\n\t\t\tstartTimer(e);\r\n\t\t}, 1000)\r\n\t\tRef.current = id;\r\n\t}\r\n\r\n\tconst getDeadTime = () => {\r\n\t\tlet deadline = new Date();\r\n\r\n\t\t// This is where you need to adjust if\r\n\t\t// you entend to add more time\r\n\t\tdeadline.setSeconds(deadline.getSeconds() + 1500300);\r\n\t\treturn deadline;\r\n\t}\r\n\r\n\t// We can use useEffect so that when the component\r\n\t// mount the timer will start as soon as possible\r\n\r\n\t// We put empty array to act as componentDid\r\n\t// mount only\r\n\tuseEffect(() => {\r\n\t\tclearTimer(getDeadTime());\r\n\t}, []);\r\n\r\n\t// Another way to call the clearTimer() to start\r\n\t// the countdown is via action event from the\r\n\t// button first we create function to be called\r\n\t// by the button\r\n\tconst onClickReset = () => {\r\n\t\tclearTimer(getDeadTime());\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"App timer__items\">\r\n\t\t\t<div className=\"App timer__item\">{timer}</div>\r\n\t\t\t{/* <button onClick={onClickReset}>Reset</button> */}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}